{{>viewprofileowner}}

<section class="establishment" id="establishment">
    <div class="header" style="background-image: url({{estData.path}});">
      <div class="content" id="estabname">{{estData.name}}</div>
    </div>
    <div class="content-text">
      <div class="text-container">
        <span id="est_rating" class="rating">Rating: {{rating}}/5 ({{postLength}} review/s)</span>
        <a href="" class="custom-button">Review Now</a>
      </div>
    </div>

    <div class="description-content">
      <img src="{{estData.icon}}" class="aligned-image">
      <p class="image-description">
        {{estData.description}}
      </p>
    </div>

    

    {{#each postData}}
      <div class="comment-container">

       
        <div class="profile-picture">
          <img src="{{this.cust_profpic}}" alt="Profile Picture">
        </div>
        
        <div class="comment-content">
          <span class="comment-author">
            {{this.cust_name}}
          </span>
          &nbsp &nbsp &nbsp
          <span class="comment-author post-ratings">
            {{this.rating}}/5
          </span>
          

          <p class="comment-text">
            {{this.review}}
          </p>
          {{#if this.attached}}
          <div class="pics_container">
              {{#each this.attached}}
              <img src="{{this}}" class="review_pics"/>
              {{/each}}
          </div>
          {{/if}}
          
          <span class="comment-time">143 hours ago</span>
          <div class="comment-buttons">
            <input type="hidden" id="postid" value="{{this._id}}" >
            <button id="helpful" class="helpful-button">Helpful 
                {{this.helpful_num}}</button>
            <button id="nothelpful" >Not Helpful 
                {{this.nothelpful_num}}</button>

            {{#each this.comments}}
            <div class="comment-container">

       
              <div class="profile-picture">
                <img src="{{this.pic}}" alt="Profile Picture">
              </div>
              
              <div class="comment-content">
                <span class="comment-author">
                  {{this.estname}}
                </span>
                &nbsp &nbsp &nbsp                

                <p class="comment-text">
                  {{this.comment}}
                </p>
                
                <span class="comment-time">143 hours ago</span>

              </div>
              
            </div>
            {{/each}}

            <div class="form-container" id="formcont{{@index}}">
            <form id ="commentform{{@index}}" >
              <textarea placeholder="write a comment..." name="comment"></textarea>
              <div class="row button">
                <button type="button" value="comment_btn" onclick="commentPost({{@index}})" id="submitcommentbtn">Add Comment</button>
                <input type="hidden" name="post_number" value="{{this._id}}">
              </div>
            </form>
            </div>

          </div>

        </div>

      </div>
      {{/each}}

      <script>
        //const rating = parseInt(document.querySelector('#est_rating').innerText.substring(8,9));
        const post_ratings = document.querySelectorAll('.post-ratings');
        const helpfulBtn = document.querySelector('#helpful');
        const postid = document.querySelector('#postid');
        const nothelpfulBtn = document.querySelector('#nothelpful');
        const container = document.querySelector('#starrating');
        const submitCommentBtn = document.querySelector('#submitcommentbtn');
        const formContainer = document.querySelectorAll('.form-container');
        const estabname = document.getElementById("estabname").innerText;
        console.log(estabname);
       
        async function commentPost(index){
          const form = "commentform" + index;

          const commentForm = document.getElementById(form);
            const formData = new FormData(commentForm);
            const data = {};
            for (const entry of formData.entries()) {
                console.log(`${entry[0]}, ${entry[1]}`);
                data[entry[0]] = entry[1];
            }
            
            const json = JSON.stringify(data);

            const response = await fetch('/comment', {
                method: 'POST',
                body: json,
                headers: {
                    "Content-Type": "application/json"
                }
            })
          commentForm.reset();
          if (response.status == 200) {
              console.log("ueu");
              const formCont = document.getElementById("formcont" + index);
              
              const commentContainer = document.createElement('div');
              commentContainer.classList.add('comment-container');

              const profilePictureDiv = document.createElement('div');
              profilePictureDiv.classList.add('profile-picture');

              const profilePictureImg = document.createElement('img');
              profilePictureImg.src = "";
              profilePictureImg.alt = "Profile Picture";

              profilePictureDiv.appendChild(profilePictureImg);

              const commentContentDiv = document.createElement('div');
              commentContentDiv.classList.add('comment-content');

              const commentAuthorSpan = document.createElement('span');
              commentAuthorSpan.classList.add('comment-author');
              commentAuthorSpan.innerHTML= estabname;

              const commentTextP = document.createElement('p');
              commentTextP.classList.add('comment-text');
              commentTextP.innerText = formData.get('comment');

              const commentTimeSpan = document.createElement('span');
              commentTimeSpan.classList.add('comment-time');

              const commentTimeText = document.createTextNode("143 hours ago");

              commentTimeSpan.appendChild(commentTimeText);

              commentContentDiv.appendChild(commentAuthorSpan);
              commentContentDiv.appendChild(document.createTextNode("  "));
              commentContentDiv.appendChild(commentTextP);
              commentContentDiv.appendChild(commentTimeSpan);

              
              commentContainer.appendChild(profilePictureDiv);
              commentContainer.appendChild(commentContentDiv);
              
              formCont.parentNode.insertBefore(commentContainer, formCont);
              
          
              
              
          } else {
              console.log(`received response: ${response.status}`);
          } 
        }

        
      

        helpfulBtn.addEventListener('click', async function (e) {
          e.preventDefault();
          const postId = postid.value;  
          const response = await fetch('/updateHelpful?postId=' + postId,{
              method: 'GET',
          });
          if (response.status == 400) {
              helpfulBtn.innerText = "Helpful " + (parseInt(helpfulBtn.innerText.substring(8)) + 1).toString();
          } else if (response.status == 200){
              console.log('ok');
          }
        });

        nothelpfulBtn.addEventListener('click', async function (e) {
          e.preventDefault();
          const postId = postid.value;  
          const response = await fetch('/updateNotHelpful?postId=' + postId,{
              method: 'GET',
          });
          if (response.status == 400) {
              nothelpfulBtn.innerText = "Not Helpful " + (parseInt(nothelpfulBtn.innerText.substring(12)) + 1).toString();
          } else if (response.status == 200){
              console.log('ok');
          }
        });

        window.addEventListener('load',  (event) => {
          console.log(post_ratings);
            for(let i = 0; i != post_ratings.length; i++) {
              let rating = post_ratings[i].innerText.substring(0,1);
              console.log(rating);
              let text_rating = document.createElement("p");
              text_rating.innerText = post_ratings[i].innerText;
              //post_ratings[i].innerText="";
              for (let j = 0; j != rating; j++) {
                let star = document.createElement("i");
                star.classList.add("fas");
                star.classList.add("fa-star");
                star.classList.add("star-icon");
                post_ratings[i].prepend(star);
              }
              //post_ratings[i].appendChild(text_rating);
            }
        });

        
      </script>

  </section>